<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fracong.blog.func.content.dao.BlogContentDao">
  <resultMap id="BaseResultMap" type="com.fracong.blog.func.content.entity.BlogContent">
    <id column="content_id" jdbcType="BIGINT" property="contentId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="content_name" jdbcType="VARCHAR" property="contentName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_id" jdbcType="VARCHAR" property="createId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_id" jdbcType="VARCHAR" property="updateId" />
    <result column="source_name" jdbcType="VARCHAR" property="sourceName" />
    <result column="view_num" jdbcType="BIGINT" property="viewNum" />
    <result column="section_id" jdbcType="VARCHAR" property="sectionId" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.fracong.blog.func.content.entity.BlogContent">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    content_id, user_id, content_name, create_time, create_id, update_time, update_id, 
    source_name, view_num, section_id, `status`
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.fracong.blog.func.content.entity.BlogContentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.fracong.blog.func.content.entity.BlogContentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog_content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_content
    where content_id = #{contentId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from blog_content
    where content_id = #{contentId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.fracong.blog.func.content.entity.BlogContentExample">
    delete from blog_content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fracong.blog.func.content.entity.BlogContent">
    insert into blog_content (content_id, user_id, content_name, 
      create_time, create_id, update_time, 
      update_id, source_name, view_num, 
      section_id, `status`, content
      )
    values (#{contentId,jdbcType=BIGINT}, #{userId,jdbcType=VARCHAR}, #{contentName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createId,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateId,jdbcType=VARCHAR}, #{sourceName,jdbcType=VARCHAR}, #{viewNum,jdbcType=BIGINT}, 
      #{sectionId,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fracong.blog.func.content.entity.BlogContent">
    insert into blog_content
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="contentId != null">
        content_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="contentName != null">
        content_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateId != null">
        update_id,
      </if>
      <if test="sourceName != null">
        source_name,
      </if>
      <if test="viewNum != null">
        view_num,
      </if>
      <if test="sectionId != null">
        section_id,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="contentId != null">
        #{contentId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="contentName != null">
        #{contentName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=VARCHAR},
      </if>
      <if test="sourceName != null">
        #{sourceName,jdbcType=VARCHAR},
      </if>
      <if test="viewNum != null">
        #{viewNum,jdbcType=BIGINT},
      </if>
      <if test="sectionId != null">
        #{sectionId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fracong.blog.func.content.entity.BlogContentExample" resultType="java.lang.Long">
    select count(*) from blog_content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update blog_content
    <set>
      <if test="record.contentId != null">
        content_id = #{record.contentId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.contentName != null">
        content_name = #{record.contentName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createId != null">
        create_id = #{record.createId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateId != null">
        update_id = #{record.updateId,jdbcType=VARCHAR},
      </if>
      <if test="record.sourceName != null">
        source_name = #{record.sourceName,jdbcType=VARCHAR},
      </if>
      <if test="record.viewNum != null">
        view_num = #{record.viewNum,jdbcType=BIGINT},
      </if>
      <if test="record.sectionId != null">
        section_id = #{record.sectionId,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update blog_content
    set content_id = #{record.contentId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=VARCHAR},
      content_name = #{record.contentName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_id = #{record.createId,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_id = #{record.updateId,jdbcType=VARCHAR},
      source_name = #{record.sourceName,jdbcType=VARCHAR},
      view_num = #{record.viewNum,jdbcType=BIGINT},
      section_id = #{record.sectionId,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update blog_content
    set content_id = #{record.contentId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=VARCHAR},
      content_name = #{record.contentName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_id = #{record.createId,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_id = #{record.updateId,jdbcType=VARCHAR},
      source_name = #{record.sourceName,jdbcType=VARCHAR},
      view_num = #{record.viewNum,jdbcType=BIGINT},
      section_id = #{record.sectionId,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fracong.blog.func.content.entity.BlogContent">
    update blog_content
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="contentName != null">
        content_name = #{contentName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=VARCHAR},
      </if>
      <if test="sourceName != null">
        source_name = #{sourceName,jdbcType=VARCHAR},
      </if>
      <if test="viewNum != null">
        view_num = #{viewNum,jdbcType=BIGINT},
      </if>
      <if test="sectionId != null">
        section_id = #{sectionId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where content_id = #{contentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fracong.blog.func.content.entity.BlogContent">
    update blog_content
    set user_id = #{userId,jdbcType=VARCHAR},
      content_name = #{contentName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_id = #{updateId,jdbcType=VARCHAR},
      source_name = #{sourceName,jdbcType=VARCHAR},
      view_num = #{viewNum,jdbcType=BIGINT},
      section_id = #{sectionId,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where content_id = #{contentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fracong.blog.func.content.entity.BlogContent">
    update blog_content
    set user_id = #{userId,jdbcType=VARCHAR},
      content_name = #{contentName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_id = #{updateId,jdbcType=VARCHAR},
      source_name = #{sourceName,jdbcType=VARCHAR},
      view_num = #{viewNum,jdbcType=BIGINT},
      section_id = #{sectionId,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER}
    where content_id = #{contentId,jdbcType=BIGINT}
  </update>
</mapper>